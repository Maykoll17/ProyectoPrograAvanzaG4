@model IEnumerable<ProyectoProgramacion.Models.EF.Pago>
@{
    ViewBag.Title = "Gestión de Pagos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-4">
        <h2 class="text-danger fw-bold m-0">Gestión de Pagos</h2>
        @Html.ActionLink("Registrar Pago", "Create", "Pagos", null, new { @class = "btn btn-danger" })
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover shadow-sm align-middle">
            <thead class="table-danger">
                <tr>
                    <th>ID</th>
                    <th>Contrato</th>
                    <th>Usuario</th>
                    <th>Fecha</th>
                    <th>Monto</th>
                    <th>Método / Estado</th>
                    <th class="text-center">Actualizar Estado</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="8" class="text-center text-muted">No hay pagos registrados.</td>
                    </tr>
                }
                else
                {
                    foreach (var p in Model)
                    {
                        <tr>
                            <td>@p.ID_Pago</td>
                            <td>@p.ID_Contrato</td>
                            <td>
                                @(p.Contrato != null && p.Contrato.Usuario != null
                                    ? (p.Contrato.Usuario.Nombre + " (" + p.Contrato.Usuario.Cedula + ")")
                                    : "—")
                            </td>
                            <td>@p.Fecha_Pago.ToString("dd/MM/yyyy")</td>
                            <td>₡@p.Monto_Pago.ToString("N2")</td>
                            <td>
                                <span class="badge bg-@((p.Metodo_Pago ?? "").ToLower() == "pagado" ? "success" : (p.Metodo_Pago ?? "").ToLower() == "rechazado" ? "danger" : "warning text-dark")">
                                    @(!string.IsNullOrEmpty(p.Metodo_Pago) ? p.Metodo_Pago : "—")
                                </span>
                            </td>
                            <td class="text-center">
                                @using (Html.BeginForm("ActualizarEstado", "Pagos", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", p.ID_Pago)
                                    <div class="d-inline-flex gap-2 align-items-center">
                                        <select name="nuevoEstado" class="form-select form-select-sm w-auto">
                                            <option value="Pagado" @(p.Metodo_Pago == "Pagado" ? "selected" : "")>Pagado</option>
                                            <option value="Pendiente" @(p.Metodo_Pago == "Pendiente" ? "selected" : "")>Pendiente</option>
                                            <option value="Rechazado" @(p.Metodo_Pago == "Rechazado" ? "selected" : "")>Rechazado</option>
                                        </select>
                                        <button type="submit" class="btn btn-sm btn-outline-success">Guardar</button>
                                    </div>
                                }
                            </td>
                            <td class="text-end">
                                @Html.ActionLink("Detalles", "Details", "Pagos", new { id = p.ID_Pago }, new { @class = "btn btn-sm btn-outline-primary" })
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
